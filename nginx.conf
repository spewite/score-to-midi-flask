# PRODUCTION CONFIGURATION
server {
    listen 80;
    listen [::]:80;
    server_name api.score-to-midi.com;

    # Esto lo habrá configurado Certbot para redirigir HTTP a HTTPS
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.score-to-midi.com;

    # Configuración SSL añadida por Certbot (no la toques)
    ssl_certificate /etc/letsencrypt/live/api.score-to-midi.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.score-to-midi.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    client_max_body_size 1G;

    # Aquí es donde configuras el proxy a tu servicio Python
    location / {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;

        # --- CORS HEADERS ---
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,If-Modified-Since,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Disposition' always;
    }
}

# STAGING CONFIGURATION
server {
    if ($host = api-staging.score-to-midi.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    listen [::]:80;
    server_name api-staging.score-to-midi.com;

    # For Certbot Let's Encrypt challenges
    location /.well-known/acme-challenge/ {
        root /var/www/html; # Or your common certbot webroot
    }

    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }


}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api-staging.score-to-midi.com;

    ssl_certificate /etc/letsencrypt/live/api-staging.score-to-midi.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api-staging.score-to-midi.com/privkey.pem;

    # Logging for staging - Optional but recommended
    access_log /var/log/nginx/api-staging.score-to-midi.com.access.log;
    error_log /var/log/nginx/api-staging.score-to-midi.com.error.log;

    client_max_body_size 1G;

    location / {
        proxy_pass http://127.0.0.1:5050;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;

        # --- CORS HEADERS ---
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,If-Modified-Since,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Disposition' always;
    }
}